//@version=5
// ┌─────────────────────────────────────────────────────────────────────────┐
// │ Market Inefficiency Trend - V8.3 (Truly Final & Error-Free)             │
// │ ─────────────────────────────────────────────────────────────────────── │
// │ Corrects the persistent syntax error for color inputs. This is the      │
// │ final, stable, and working version of the ATS-style indicator.          │
// └─────────────────────────────────────────────────────────────────────────┘

indicator("Market Inefficiency Trend V8.3", "MIT V8.3", overlay=true)

// --- INPUTS (Corrected Syntax) ---
longColor = input(#00BFFF, "Long Bias Color", group="Style")
shortColor = input(#FFA500, "Short Bias Color", group="Style")
lineWidth = input.int(2, "Line Width", minval=1, maxval=5, group="Style")
groupLookback = input.int(8, "Group Separation Lookback", group="Settings")
pivotLookback = input.int(5, "Trailing Pivot Lookback", group="Settings", tooltip="Determines the sensitivity of the trailing line. Smaller numbers make it more responsive.")
showSignalPoints = input.bool(true, "Show Trend Change Points", group="Visuals")

// --- STATE & DATA MANAGEMENT ---
var int bias = 0 // 1=Long, -1=Short, 0=Neutral
var float trailingLevel = na

// --- CORE CALCULATIONS (Moved for consistency) ---
// Inefficiency Detection
is3BarBullish = low > high[2]
is3BarBearish = high < low[2]

lowestLowRecent = ta.lowest(low, 3)
highestHighPrevious = ta.highest(high, groupLookback)[3]
isGroupBullish = lowestLowRecent > highestHighPrevious

highestHighRecent = ta.highest(high, 3)
lowestLowPrevious = ta.lowest(low, groupLookback)[3]
isGroupBearish = highestHighRecent < lowestLowPrevious

isBullishOrigin = is3BarBullish or isGroupBullish
isBearishOrigin = is3BarBearish or isGroupBearish

// Pivot Calculations (Called on every bar as per best practice)
lastPivotLow = ta.pivotlow(low, pivotLookback, pivotLookback)
lastPivotHigh = ta.pivothigh(high, pivotLookback, pivotLookback)

// --- BIAS & TRAILING LEVEL MANAGEMENT ---

// Step 1: Check for a new trend initiation
if isBullishOrigin and bias != 1
    bias := 1
    trailingLevel := low
    if showSignalPoints
        label.new(bar_index, low, '▲', color=color.new(color.white, 100), textcolor=longColor, style=label.style_none, size=size.small)

else if isBearishOrigin and bias != -1
    bias := -1
    trailingLevel := high
    if showSignalPoints
        label.new(bar_index, high, '▼', color=color.new(color.white, 100), textcolor=shortColor, style=label.style_none, size=size.small)

// Step 2: Update the trailing level if the trend continues
if bias == 1
    if not na(lastPivotLow) and lastPivotLow > trailingLevel
        trailingLevel := lastPivotLow

if bias == -1
    if not na(lastPivotHigh) and lastPivotHigh < trailingLevel
        trailingLevel := lastPivotHigh

// Step 3: Check for Trend Invalidation
if (bias == 1 and close < trailingLevel) or (bias == -1 and close > trailingLevel)
    bias := 0
    trailingLevel := na

// --- PLOTTING ---
lineColor = bias == 1 ? longColor : bias == -1 ? shortColor : na
plot(trailingLevel, "ATS Trend Line", lineColor, lineWidth)

// --- VISUALS ---
bgcolor(bias == 1 ? color.new(longColor, 90) : bias == -1 ? color.new(shortColor, 90) : na)

// --- STATUS TABLE ---
var table info = table.new(position.top_right, 2, 2, border_width=1)
if barstate.islast
    table.cell(info, 0, 0, "Bias:", bgcolor=color.new(color.gray, 50), text_color=color.white)
    table.cell(info, 1, 0, bias == 1 ? "LONG ↑" : bias == -1 ? "SHORT ↓" : "NEUTRAL —", bgcolor=bias == 1 ? longColor : bias == -1 ? shortColor : color.gray, text_color=color.white)
    
    table.cell(info, 0, 1, "Trailing Level:", bgcolor=color.new(color.gray, 50), text_color=color.white)
    table.cell(info, 1, 1, na(trailingLevel) ? "N/A" : str.tostring(trailingLevel, format.mintick), bgcolor=color.new(color.gray, 50), text_color=color.white)