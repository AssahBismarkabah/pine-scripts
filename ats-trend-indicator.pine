//@version=5
indicator("ATS Dual Trend Indicator V5", "ATS Dual Trend", overlay=true, max_lines_count=500, max_labels_count=500)

// =============================================================================
//                             USER CONFIGURATION
// =============================================================================

// --- Global Settings ---
showBackground = input.bool(true, "Show Background Bias (Line B)", tooltip="Colors the background based on the faster, Line B trend direction.")
// --- End Global Settings ---


// --- Line A (Slower/Bias Trend - e.g., Daily/Weekly) ---
lineA_header = "--- Line A (HTF Bias) Configuration ---"
showLineA = input.bool(true, "Show Line A", group=lineA_header, tooltip="Toggle visibility for the slower trend line.")
lookbackA = input.int(8, "Lookback Window A", minval=5, maxval=20, group=lineA_header, tooltip="Lookback for Cluster Pivots (e.g., 5 for 1W)")
smoothingA = input.int(2, "Smoothing Length A", minval=1, maxval=10, group=lineA_header, tooltip="EMA smoothing period. Set to 1 for no smoothing.")
colorA = input.color(color.new(color.white, 0), "Color A", group=lineA_header)
showTrendChangeDotsA = input.bool(false, "Show Trend Change Dots A (Bias Flip)", group=lineA_header, tooltip="Marks major bias flips on the slower Line A.")

// --- Line B (Faster/Entry Trend - e.g., 4H/30M) ---
lineB_header = "--- Line B (LTF Entry) Configuration ---"
showLineB = input.bool(true, "Show Line B", group=lineB_header, tooltip="Toggle visibility for the faster trend line.")
lookbackB = input.int(15, "Lookback Window B", minval=5, maxval=20, group=lineB_header, tooltip="Lookback for Cluster Pivots (e.g., 15 for 30M)")
smoothingB = input.int(4, "Smoothing Length B", minval=1, maxval=10, group=lineB_header, tooltip="EMA smoothing period. Set to 1 for no smoothing.")
colorB = input.color(color.new(#00BFFF, 0), "Color B", group=lineB_header) // Default Blue for contrast
showTrendChangeDotsB = input.bool(true, "Show Trend Change Dots B (Entry Flip)", group=lineB_header, tooltip="Marks entry/exit flips on the faster Line B.")


// =============================================================================
//                             CORE CALCULATION FUNCTION
// =============================================================================
// Encapsulates the entire ATS logic to be run twice independently

f_calculateATS(lookbackWindow, smoothingLength) =>
    // --- 1. STATE VARIABLES ---
    var trendDirection = "Neutral"
    var float trendLine = na
    var float lastFVGSupport = na
    var float lastFVGResistance = na
    var float lastClusterSupport = na
    var float lastClusterResistance = na

    // --- 2. 3-CANDLE FVG DETECTION ---
    bullishFVG = low[2] > high
    bearishFVG = high[2] < low
    
    // Update last FVG levels
    if bullishFVG
        lastFVGSupport := high
    if bearishFVG
        lastFVGResistance := low

    // --- 3. CLUSTER PIVOT DETECTION ---
    pivotLow = ta.pivotlow(low, lookbackWindow, lookbackWindow)
    pivotHigh = ta.pivothigh(high, lookbackWindow, lookbackWindow)
    
    // Update last cluster levels persistently
    lastClusterSupport := ta.valuewhen(not na(pivotLow), pivotLow, 0)
    lastClusterResistance := ta.valuewhen(not na(pivotHigh), pivotHigh, 0)

    // Store previous trend for change detection
    string prevTrendDirection = trendDirection[1]

    // --- 4. TREND ESTABLISHMENT (State Machine) ---
    if bullishFVG and trendDirection != "Up"
        trendDirection := "Up"
        
    if bearishFVG and trendDirection != "Down"
        trendDirection := "Down"

    // --- 5. HIERARCHICAL TREND LINE UPDATE LOGIC ---
    // For bullish trend: choose tightest valid support (highest of available levels)
    if trendDirection == "Up"
        // Ensure initial value for newTrendLine is float
        float newTrendLine = na(trendLine[1]) ? lastFVGSupport : nz(trendLine[1])
        if not na(lastFVGSupport) and lastFVGSupport > newTrendLine
            newTrendLine := lastFVGSupport
        if not na(lastClusterSupport) and lastClusterSupport > newTrendLine
            newTrendLine := lastClusterSupport
        trendLine := newTrendLine

    // For bearish trend: choose tightest valid resistance (lowest of available levels)        
    if trendDirection == "Down"
        // Ensure initial value for newTrendLine is float
        float newTrendLine = na(trendLine[1]) ? lastFVGResistance : nz(trendLine[1])
        if not na(lastFVGResistance) and lastFVGResistance < newTrendLine
            newTrendLine := lastFVGResistance
        if not na(lastClusterResistance) and lastClusterResistance < newTrendLine
            newTrendLine := lastClusterResistance
        trendLine := newTrendLine

    // --- 6. TREND INVALIDATION LOGIC ---
    if trendDirection == "Up" and close < trendLine
        trendDirection := "Down"
        trendLine := high  // Reset line
        lastFVGSupport := na
        lastClusterSupport := na

    if trendDirection == "Down" and close > trendLine
        trendDirection := "Up"  
        trendLine := low   // Reset line
        lastFVGResistance := na
        lastClusterResistance := na

    // --- 7. SMOOTHING ---
    smoothedTrendLine = ta.ema(trendLine, smoothingLength)
    
    // --- 8. RETURN VALUES ---
    [smoothedTrendLine, trendDirection, prevTrendDirection]


// =============================================================================
//                             EXECUTION
// =============================================================================

// Run the function for Line A
[smoothedTrendLineA, trendDirectionA, prevTrendDirectionA] = f_calculateATS(lookbackA, smoothingA)

// Run the function for Line B
[smoothedTrendLineB, trendDirectionB, prevTrendDirectionB] = f_calculateATS(lookbackB, smoothingB)


// =============================================================================
//                             VISUALIZATION
// =============================================================================

// --- Line A Plot (HTF Bias) ---
plot(showLineA ? smoothedTrendLineA : na, "ATS Line A", colorA, 2, plot.style_line)

// --- Line B Plot (LTF Entry) ---
plot(showLineB ? smoothedTrendLineB : na, "ATS Line B", colorB, 2, plot.style_line)

// --- Background Color (Uses faster Line B bias) ---
bgcolor(showBackground ? (trendDirectionB == "Up" ? color.new(color.green, 95) : trendDirectionB == "Down" ? color.new(color.red, 95) : na) : na)

// --- Trend Change Dots for Line A (Major Bias Flip) ---
plotshape(showLineA and showTrendChangeDotsA and trendDirectionA != prevTrendDirectionA ? smoothedTrendLineA : na, 
          title="Line A Trend Flip", 
          style=shape.cross, // CHANGED: Now plots a small cross
          location=location.absolute,
          color=trendDirectionA == "Up" ? color.green : color.red, // Full color for clarity
          size=size.small) // CHANGED: Now uses small size for subtlety

// --- Trend Change Dots for Line B (Entry Flip) ---
plotshape(showLineB and showTrendChangeDotsB and trendDirectionB != prevTrendDirectionB ? smoothedTrendLineB : na, 
          title="Line B Trend Flip", 
          style=shape.circle, 
          location=location.absolute,
          color=trendDirectionB == "Up" ? color.green : color.red, // Full color for clear LTF signal
          size=size.small)

// =============================================================================
//                             ALERTS
// =============================================================================
// Alerts are now based on Line B (the entry line)

// Trend direction change alerts
alertcondition(trendDirectionB != prevTrendDirectionB, "Line B Trend Change", "Line B direction changed to {{trendDirectionB}}")

// Trend line break alerts (invalidation)
alertcondition(trendDirectionB == "Up" and close < smoothedTrendLineB, "Line B Bullish Trend Break", "Price broke below Line B (Bullish Trend Invalidation)")
alertcondition(trendDirectionB == "Down" and close > smoothedTrendLineB, "Line B Bearish Trend Break", "Price broke above Line B (Bearish Trend Invalidation)")

// Multi-Timeframe Confirmation Alert: Optional, very powerful signal!
alertcondition(trendDirectionA == "Up" and trendDirectionB == "Up", "HTF/LTF BULLISH Alignment", "Both Line A and Line B are Bullish (Strong Long Signal)")
alertcondition(trendDirectionA == "Down" and trendDirectionB == "Down", "HTF/LTF BEARISH Alignment", "Both Line A and Line B are Bearish (Strong Short Signal)")

// =============================================================================
//                             DOCUMENTATION
// =============================================================================
// This indicator provides two independent ATS Trend lines with separate configurations
// for powerful Multi-Timeframe (MTF) analysis.
//
// USAGE:
// 1. Line A (Slower): Set to a high-TF Lookback (e.g., 5 or 8) for overall BIAS.
// 2. Line B (Faster): Set to a low-TF Lookback (e.g., 15 or 20) for ENTRY/EXIT timing.
//
// - LONG SIGNAL: Line A is Green/Up AND Line B flips/stays Green/Up.
// - SHORT SIGNAL: Line A is Red/Down AND Line B flips/stays Red/Down.
// - INVALDATION: A close past the corresponding Line A or B.
//
// Default configurations are set for common HTF/LTF distinction.
// Line B controls the Background color and Trend Flip Dots.
